// pages/goods/info.js
const util = require('../../utils/util');
const api = require('../../utils/api');
const WxParse = require('../../wxParse/wxParse.js');
const app = getApp();

Page({

  /**
   * 页面的初始数据
   */
  data: {
    id:'',
    Hei:'',
    detail:'', //商品详情
    addClass: 'none', //添加样式
    hover: '',
    num:1, //数量
    specifClass:'',
    specifCur:'', // 索引
    specifArr:[],
    goSelect:'', //选择加入购物车还是立即购买
    collotHover:'', //商品收藏
    goods_spec:[], //商品规格数组
    specAll:'',
    goods_spec_price:'',
    goods_spec_number: '',
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (e) {
    if (e.id){
      this.setData({
        id : e.id
      })
    }
    this.goodsDetail();
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {
  },
  goodsDetail:function(){
    let that = this;
    let id = that.data.id;
    util.request(api.Goodsdetail, {
      id: that.data.id
    }).then(function (res) {
      // console.log(res)
      if (res.success) {

        // 商品描述
        if (res.list.goods_content) {
          var article = res.list.goods_content;
          WxParse.wxParse('article', 'html', article, that, 5);
        }

        // 收藏商品
        if (res.list.collect != 0 ){
          that.setData({
            collotHover: 'hover',
          });
        }

        // 存在规格时
        if (res.list.goods_spec && res.list.goods_spec.length){
          let specAll = [];
          for (let i = 0; i < res.list.goods_spec.length; i++) {
            // res.list.goods_spec.
            for (let x in res.list.goods_spec[i].list) {
              if (res.list.goods_spec[i].list[x].sort == 0) {
                // 默认选择第一规格选择
                res.list.goods_spec[i].list[x].hover = 'hover'
                specAll.push(res.list.goods_spec[i].list[x].value)
              } else {
                res.list.goods_spec[i].list[x].hover = ''
              }
              //  自定义添加索引
              res.list.goods_spec[i].list[x].ind = x
              res.list.goods_spec[i].list[x].prev = i
            }
          }
          specAll = specAll.join(',');
          
          that.setData({
            goods_spec: res.list.goods_spec,
            specAll: specAll
          });
          // 规格请求参数
          that.speciAjax();
        }

        that.setData({
          detail: res.list,
        });

      } else {
        util.showErrorToast(res.info);
      }
    });
    
  },
  imgH: function (e) {
    // swiper图片轮播高度
    let winWid = wx.getSystemInfoSync().windowWidth;         //获取当前屏幕的宽度
    let imgh = e.detail.height;　　　　　　　　　　　　　　　　//图片高度
    let imgw = e.detail.width;
    let swiperH = winWid * imgh / imgw + "px";
    this.setData({
      Hei: swiperH　　　　　　　　//设置高度
    })
  },
  closeClass: function () {
    // 关闭改状态
    let that = this;
    that.setData({
      addClass: 'none',
      hover: '',
      num:1
    })
  },
  addClass: function () {
    let that = this;
    that.setData({
      addClass: 'block',
      hover: 'hover'
    })
  },
  minus: function () {
    // 减少
    let num = this.data.num > 1 ? --this.data.num : 1
    this.setData({
      num: num
    })
  },
  plus: function () {
    // 增加
    let num = this.data.num;
    let maxMum = this.data.maxMum;
    num++;
    this.setData({
      num: num
    })
  },
  specifAdd:function(e){
    // console.log(e)
    // 添加规格
    let that = this;
    let id = e.currentTarget.dataset.id,
      prev = e.currentTarget.dataset.prev,
      index = e.currentTarget.dataset.index;

    let goods_spec = that.data.goods_spec;

    for (let i in goods_spec[prev].list) {
      goods_spec[prev].list[i].hover = '';
    }
    goods_spec[prev].list[index].hover = 'hover';

    let specAll = [];
    // 商品规格读取
    for (let k = 0; k < goods_spec.length; k++) {
      for (let x in goods_spec[k].list) {
        if (goods_spec[k].list[x].hover == 'hover') {
          // 默认选择第一规格选择
          specAll.push(goods_spec[k].list[x].value)
        }
      }
    }
    specAll = specAll.join(',');

    that.setData({
      goods_spec: goods_spec,
      specAll: specAll
    })
    that.speciAjax();
    
  },
  speciAjax:function(){
    // 规格请求
    let that = this;
    let goods = [{ 
      'goods_id': that.data.id, 
      'spec_value': that.data.specAll, 
      'goods_number': that.data.num, 
    }];
    // console.log(goods)
    util.request(api.Getgoodsprice, {
      goods: goods
    }).then(function (res) {
      // console.log(res)
      if (res.success) {
        that.setData({
          goods_spec_price: res.list.goods[0].goods_price,
          goods_spec_number: res.list.goods[0].goods_number,
        })
      } else {
        util.showErrorToast(res.info);
      }
    });
  },
  change:function(e){
    let id = e.currentTarget.dataset.id;
    this.setData({
      goSelect: id
    })
    this.addClass();
  },
  addCart:function(){
    // 添加购物车
    let that = this;
    let datas = {
      goods_id: that.data.id,
      spec_value: that.data.specAll,
      goods_number: that.data.num
    }
    util.request(api.Addcart, datas ).then(function (res) {
      // console.log(res)
      if (res.success) {
        wx.showToast({
          title: res.info,
        })
        that.closeClass();
      } else {
        util.showErrorToast(res.info);
      }
    });


  },
  confirm:function(){
    // 选择加入
    let that = this;
    let arr = [];
    let goods_spec = that.data.goods_spec;
    console.log(goods_spec)
    let goods = that.data.detail;
    let goods_price = 0;
    if (goods_spec && goods_spec.length > 0){
      goods_price = that.data.goods_spec_price  //规格价钱
    }else{
      goods_price = goods.goods_price //商品价钱
    }

    console.log(goods_price)

    arr[0] = {
      'id': that.data.id, //商品数量 id
      'goods_number': that.data.num,  //商品数量
      'goods_price': goods_price, // 商品价格
      'goods_name': that.data.detail.goods_name,    //商品名称
      'goods_image': that.data.detail.goods_image[0], // 图片
      'goods_spec': that.data.specAll, //规格
      'market_price': that.data.detail.market_price //市场价
    }
    wx.setStorageSync('shop', arr);
    
    that.closeClass();
    
    wx.navigateTo({
      url: '/pages/cart/check',
    });

  },
  toService:function(){
    //客服
  },
  toCollect: function () {
    //收藏
    let that = this;
    let id = that.data.id;
    let hover = that.data.collotHover;
    util.request(api.Goodscollect, {
      goods_id: that.data.id
    }).then(function (res) {
      // console.log(res)
      if (res.success) {
        wx.showToast({
          title: res.info,
        })
        if (hover == 'hover'){
          that.setData({
            collotHover: '',
          });
        }else{
          that.setData({
            collotHover: 'hover',
          });
        }
        
      } else {
        util.showErrorToast(res.info);
      }
    });
  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})